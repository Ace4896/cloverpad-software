syntax = "proto3";

package protocol;

import "protocol-config.proto";

// Debug-specific command used for checking that serial communication is working.
message Echo {
  // Value to be echoed. Maximum length of 64 bytes
  string value = 1;
}

// Response for the 'Echo' command.
message EchoResponse {
  // Value to be echoed. Maximum length of 64 bytes
  string value = 1;
}

// Command for getting the firmware version of the keypad.
message FirmwareVersion {}

// Response for the 'FirmwareVersion' command.
message FirmwareVersionResponse {
  // The firmware version in YYYYMMDD format
  int32 version = 1;
}

// Command for saving all pending configuration changes to the keypad's EEPROM.
message SaveConfiguration {}

// Response for the `SaveConfiguration` message.
message SaveConfigurationResponse {}

// Command for reverting all configuration changes and using the configuration from the keypad's EEPROM.
message RevertConfiguration {}

// Response for the `RevertConfiguration` command.
message RevertConfigurationResponse {
  // The main configuration now in use.
  KeypadConfiguration main_configuration = 1;

  // The hall effect key configurations now in use.
  repeated HEKeyConfiguration he_key_configurations = 2;
}

// Command for resetting the keypad to its default configuration.
message ResetToDefault {}

message ResetToDefaultResponse {
  // The default main configuration.
  KeypadConfiguration main_configuration = 1;

  // The default hall effect key configurations.
  repeated HEKeyConfiguration he_key_configurations = 2;
}

// Command for getting the main configuration that is currently active.
message GetMainConfiguration {}

// Response for the `GetMainConfiguration` command.
message GetMainConfigurationResponse {
  // The main configuration for the keypad.
  KeypadConfiguration configuration = 1;

  // Whether this configuration is "dirty", i.e. needs to be saved to EEPROM.
  bool dirty = 2;
}

// Command for setting the main configuration that is currently active.
message SetMainConfiguration {
  // The new main configuration to use.
  // The configuration_version field is ignored, as this is provided by the firmware.
  KeypadConfiguration configuration = 1;
}

// Response for the `SetMainConfiguration` command.
message SetMainConfigurationResponse {
  // The new main configuration in use.
  // The configuration_version field is provided by the keypad.
  KeypadConfiguration configuration = 1;
}
