syntax = "proto3";

package protocol;

import "protocol-config.proto";
import "protocol-state.proto";

// Command for getting the hall effect key configuration for a specific key.
message GetHEKeyConfiguration {
  reserved "row_index", "col_index", "position";  // Reserved for keypads with more than one row

  // The index of the key to get the configuration for.
  uint32 index = 1;
}

// Response for the `GetHEKeyConfiguration` command.
message GetHEKeyConfigurationResponse {
  // The index of this key.
  uint32 index = 1;

  // The current configuration for this key.
  HEKeyConfiguration configuration = 2;

  // Whether this configuration is "dirty", i.e. needs to be saved to EEPROM.
  bool dirty = 3;
}

// Command for setting the hall effect key configuration for all keys or a specific key.
message SetHEKeyConfiguration {
  reserved "row_index", "col_index", "position";  // Reserved for keypads with more than one row

  // The index of this key. If left empty, the configurations for all keys will be updated (except for keycode).
  optional uint32 index = 1;

  // The new configuration to use.
  HEKeyConfiguration configuration = 2;
}

// Response for the `SetHEKeyConfiguration` command.
message SetHEKeyConfigurationResponse {
  reserved "row_index", "col_index", "position";  // Reserved for keypads with more than one row

  // The index of the key that was updated. if empty, all key configurations were updated (except for keycode).
  optional uint32 index = 1;

  // The new configuration in use.
  HEKeyConfiguration configuration = 2;
}

// Command for getting the current state of a hall effect key.
message GetHEKeyState {
  reserved "row_index", "col_index", "position";  // Reserved for keypads with more than one row

  // The index of the key to get the current state for.
  uint32 index = 1;
}

// Response for the `GetHEKeyState` command.
message GetHEKeyStateResponse {
  reserved "row_index", "col_index", "position";  // Reserved for keypads with more than one row

  // The index of this key.
  uint32 index = 1;

  // The current state of this key.
  HEKeyState state = 2;
}
